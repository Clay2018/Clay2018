<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>blockchain on Even - A super concise theme for Hugo</title>
    <link>http://localhost:1313/categories/blockchain/</link>
    <description>Recent content in blockchain on Even - A super concise theme for Hugo</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Fri, 21 Oct 2022 00:28:00 +0800</lastBuildDate>
    
	<atom:link href="http://localhost:1313/categories/blockchain/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Reentrancy in solidity</title>
      <link>http://localhost:1313/post/reentrancy_in_solidity/</link>
      <pubDate>Fri, 21 Oct 2022 00:28:00 +0800</pubDate>
      
      <guid>http://localhost:1313/post/reentrancy_in_solidity/</guid>
      <description>Reentrancy in solidity   Definition
contract A and B.
Reentrancy exploit allows B to call back into A before A finished execution.
  Preventative Tech:
 Ensure all state changes happen before calling external contracts Use funtion modifers that prevent re-entrancy    </description>
    </item>
    
    <item>
      <title>Yul language</title>
      <link>http://localhost:1313/post/yul_in_solidity/</link>
      <pubDate>Wed, 19 Oct 2022 00:28:00 +0800</pubDate>
      
      <guid>http://localhost:1313/post/yul_in_solidity/</guid>
      <description>Resources  All About Data Location: https://betterprogramming.pub/solidity-tutorial-all-about-data-locations-dabd33212471 All About Solidity Data Locations - Storage: https://betterprogramming.pub/all-about-solidity-data-locations-part-i-storage-e50604bfc1ad All About Memory: https://betterprogramming.pub/solidity-tutorial-all-about-memory-1e1696d71ee4  </description>
    </item>
    
    <item>
      <title>Lend and Borrow</title>
      <link>http://localhost:1313/post/lend_and_borrow/</link>
      <pubDate>Mon, 17 Oct 2022 00:28:00 +0800</pubDate>
      
      <guid>http://localhost:1313/post/lend_and_borrow/</guid>
      <description>Lend and Borrow NFT借贷协议的3种模式 借贷协议主要解决三个问题: 一是高效地匹配、撮合资金供求双方；二是安全地保管抵押品；三是借款人违约时按约定处置抵</description>
    </item>
    
    <item>
      <title>Transaction Price mechanism</title>
      <link>http://localhost:1313/post/transaction_price_mechanism/</link>
      <pubDate>Mon, 17 Oct 2022 00:28:00 +0800</pubDate>
      
      <guid>http://localhost:1313/post/transaction_price_mechanism/</guid>
      <description>Transaction Price mechanism eip-155之前rlp编码rlp(nonce, gasprice, startgas, to, value, data); eip-155之编码rlp(nonce, gasprice, startgas, to, value, data, chainid, 0, 0); EIP-1559升级</description>
    </item>
    
    <item>
      <title>Ethereum</title>
      <link>http://localhost:1313/post/eth/</link>
      <pubDate>Thu, 13 Oct 2022 00:28:00 +0800</pubDate>
      
      <guid>http://localhost:1313/post/eth/</guid>
      <description>Ethereum Ethereum Node 搭建节点 1 2 ./geth --syncmode full --ws --http --mainnet --datadir &amp;#34;/data/ethereum&amp;#34; --authrpc.jwtsecret /root/tt/jwtsecret ./prysm.sh beacon-chain --execution-endpoint=http://localhost:8551 --jwt-secret=/root/tt/jwtsecret --checkpoint-sync-url https://sync.invis.tools 节点论述 以太坊协议是以太坊节点运行的一组规则，这些节点体现了数千个去中心化应用程序的核心基</description>
    </item>
    
    <item>
      <title>MEV</title>
      <link>http://localhost:1313/post/mev/</link>
      <pubDate>Thu, 13 Oct 2022 00:28:00 +0800</pubDate>
      
      <guid>http://localhost:1313/post/mev/</guid>
      <description>MEV 最大可提取价值(MEV)是指通过更改或排除一个区块中的交易顺序，可以从超过标准区块奖励和gas费的区块生产中提取的最大值，这个概念最初是由</description>
    </item>
    
    <item>
      <title>Layer2</title>
      <link>http://localhost:1313/post/layer2/</link>
      <pubDate>Wed, 12 Oct 2022 00:28:00 +0800</pubDate>
      
      <guid>http://localhost:1313/post/layer2/</guid>
      <description>Layer2 Layer2技术主要目的是扩展去快乐的性能，同时保留分布式协议的去中心化优势 闪电网络 闪电网络的主要思路十分简单&amp;ndash;将大量交易放到</description>
    </item>
    
    <item>
      <title>Randao_reveal</title>
      <link>http://localhost:1313/post/randao_reveal/</link>
      <pubDate>Fri, 07 Oct 2022 00:28:00 +0800</pubDate>
      
      <guid>http://localhost:1313/post/randao_reveal/</guid>
      <description>Randao_reveal block header介绍 Mixhash is a hash of the index, nonce, content, and previous node’s hash. This is unique, non-reversible, and of fixed length. It serves to encrypt the data of a particular block. Nonce stands for the Number used only once. It is a unique whole number that shall be used only once in the blockchain. The</description>
    </item>
    
    <item>
      <title>Understanding Bytecode on Ethereum</title>
      <link>http://localhost:1313/post/bytecode_in_solidity/</link>
      <pubDate>Fri, 07 Oct 2022 00:28:00 +0800</pubDate>
      
      <guid>http://localhost:1313/post/bytecode_in_solidity/</guid>
      <description>Understanding Bytecode on Ethereum  https://medium.com/authereum/bytecode-and-init-code-and-runtime-code-oh-my-7bcd89065904  </description>
    </item>
    
    <item>
      <title>POS</title>
      <link>http://localhost:1313/post/pos/</link>
      <pubDate>Tue, 27 Sep 2022 00:28:00 +0800</pubDate>
      
      <guid>http://localhost:1313/post/pos/</guid>
      <description>POS POW的出块属性是无过程性的，不论试多少次，它都不会影响挖出下个块的概率。下一个块的出块者，还是需要经历大量的计算。影响当前这个区块的哈希</description>
    </item>
    
    <item>
      <title>Optimizer in solidity</title>
      <link>http://localhost:1313/post/optimizer_in_solidity/</link>
      <pubDate>Sun, 25 Sep 2022 00:28:00 +0800</pubDate>
      
      <guid>http://localhost:1313/post/optimizer_in_solidity/</guid>
      <description>Optimizer in solidity 合约设计及实现变迁 v1.x版本实现，每次创建同样的合约 v2.x版本实现, 逻辑单独抽象成library,每次创建合约仅包含storage</description>
    </item>
    
    <item>
      <title>library in solidity</title>
      <link>http://localhost:1313/post/library_in_solidity/</link>
      <pubDate>Fri, 23 Sep 2022 00:28:00 +0800</pubDate>
      
      <guid>http://localhost:1313/post/library_in_solidity/</guid>
      <description>this变量 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 library MathLib { function multiply(uint a, uint b) public view returns (uint, address) { return (a * b, address(this)); } } contract Example { using MathLib for uint; address public owner = address(this); address public retAddr; function multiplyExample(uint _a, uint _b) public view returns (uint,</description>
    </item>
    
    <item>
      <title>contract security</title>
      <link>http://localhost:1313/post/contract_security/</link>
      <pubDate>Tue, 23 Aug 2022 00:28:00 +0800</pubDate>
      
      <guid>http://localhost:1313/post/contract_security/</guid>
      <description>合约事故 可升级合约漏洞-Web3音乐平台Audius被黑事件分析: https://learnblockchain.cn/article/4441 Transit Swap合约分析: https://rekt.news/transit-swap-rekt/ WCTF BelluminarBank: https://learnblockchain.cn/article/1989 1 2 3 4 BelluminarBank.deploy(&amp;#34;123456&amp;#34;, 1, {&amp;#39;from&amp;#39;:accounts[0], &amp;#39;value&amp;#39;:10}) BelluminarBank[0].invest(1, &amp;#34;0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1ecc80&amp;#34;, {&amp;#39;from&amp;#39;:accounts[1], &amp;#39;value&amp;#39;: 1}) BelluminarBank[0].invest(2, 0, {&amp;#39;from&amp;#39;:accounts[1], &amp;#39;value&amp;#39;: 0}) BelluminarBank[0].confiscate(1, &amp;#34;123456&amp;#34;, {&amp;#39;from&amp;#39;:accounts[1]})</description>
    </item>
    
    <item>
      <title>solidity doc</title>
      <link>http://localhost:1313/post/solidity/</link>
      <pubDate>Tue, 23 Aug 2022 00:28:00 +0800</pubDate>
      
      <guid>http://localhost:1313/post/solidity/</guid>
      <description>tools Solidity Visual Developer: https://consensys.net/diligence/blog/2019/10/solidity-visual-auditor-extension-for-vs-code/ sliter gas优化 gas优化: https://www.theblockbeats.info/news/31602 Resources solidity寻址: https://www.whatsblockchain.com/posts/c052872a.html https://blog.51cto.com/shijianfeng/5151269 self destruct: https://solidity-by-example.org/hacks/self-destruct/ 逆向decompile代码: https://ethervm.io/decompile fallback,receive规则: https://www.theblockbeats.info/news/31602</description>
    </item>
    
    <item>
      <title>blockchain website</title>
      <link>http://localhost:1313/post/blockchain_website/</link>
      <pubDate>Sun, 19 Dec 2021 00:28:00 +0800</pubDate>
      
      <guid>http://localhost:1313/post/blockchain_website/</guid>
      <description>Resources   The most trusted platform to manage digital assets on Ethereum: https://gnosis-safe.io/#getting-started
  ECDSA algorithm: https://zhuanlan.zhihu.com/p/97953640
  https://medium.com/swlh/create-raw-bitcoin-transaction-and-sign-it-with-golang-96b5e10c30aa
  </description>
    </item>
    
    <item>
      <title>Guessing Game</title>
      <link>http://localhost:1313/post/guess_game/</link>
      <pubDate>Sun, 07 Nov 2021 00:05:24 +0800</pubDate>
      
      <guid>http://localhost:1313/post/guess_game/</guid>
      <description>Build a Failr, Oracle-Free(no oracles allowed) Guessing Game in solidity which pits two players against each other in a game where each player tries to guess whether a randomly generated number is high or low.
  answer
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173  /** ### reference - random optimize - https://www.</description>
    </item>
    
    <item>
      <title>BTC开发资料</title>
      <link>http://localhost:1313/post/btc/</link>
      <pubDate>Tue, 26 Oct 2021 00:47:44 +0800</pubDate>
      
      <guid>http://localhost:1313/post/btc/</guid>
      <description>Resources RPC API Reference: https://developer.bitcoin.org/reference/rpc/index.html btc explorer https://www.oklink.com/btc/address/33WswvHHQMVYUQQiuoN4MYXRrjTh8zuKbq tron api doc: https://developers.tron.network/reference#tronweb-object-1 eos testnet: https://www.alohaeos.com/zh/tools/testnets sign bitcoin cash/sv/abc transaction: https://apexpl.github.io/bitcoin_cash_sv_abc_transaction_signatures.html</description>
    </item>
    
    <item>
      <title>Inheritance in solidity</title>
      <link>http://localhost:1313/post/inheritance_in_solidity/</link>
      <pubDate>Tue, 15 Jun 2021 00:00:44 +0800</pubDate>
      
      <guid>http://localhost:1313/post/inheritance_in_solidity/</guid>
      <description>Reference 菱形继承问题: https://me.tryblockchain.org/blockchain-solidity-multi-inherit-and-call-chain.html</description>
    </item>
    
    <item>
      <title>Upgradable Contract</title>
      <link>http://localhost:1313/post/upgradable_contract/</link>
      <pubDate>Mon, 14 Jun 2021 14:47:44 +0800</pubDate>
      
      <guid>http://localhost:1313/post/upgradable_contract/</guid>
      <description>Resource 可升级合约: https://www.dtmao.cc/news_show_1340999.shtml 如何实现可升级合约: https://juejin.cn/post/6844903685776998407 create2实现可升级可约: https://mirror.xyz/franx.eth/LwJvDwe3z-T5VscKrBfnOxZPc3wxhCXaooiSoxA7f5k</description>
    </item>
    
    <item>
      <title>币安研究院：硬核解析智能合约常见漏洞原理及攻击模式</title>
      <link>http://localhost:1313/post/contract_bug/</link>
      <pubDate>Mon, 14 Jun 2021 00:00:44 +0800</pubDate>
      
      <guid>http://localhost:1313/post/contract_bug/</guid>
      <description>Resource 币安研究院：硬核解析智能合约常见漏洞原理及攻击模式: https://www.chainnews.com/articles/896074917877.htm</description>
    </item>
    
    <item>
      <title>brownie使用</title>
      <link>http://localhost:1313/post/brownie/</link>
      <pubDate>Sun, 06 Jun 2021 10:28:00 +0800</pubDate>
      
      <guid>http://localhost:1313/post/brownie/</guid>
      <description>Resource brownie networks add development attack20221019 cmd=ganache-cli host=&amp;quot;http://127.0.0.1&amp;rdquo; fork=&amp;quot;https://mainnet.infura.io/v3/$WEB3_INFURA_PROJECT_ID@15780866&amp;rdquo; accounts=10 mnemonic=$MNEMONIC port=8545 brownie使用: https://betterprogramming.pub/part-1-brownie-smart-contracts-framework-for-ethereum-basics-5efc80205413#:~:text=Brownie%20is%20a%20robust%2C%20easy,to%20initialize%20or%20integrate%20them.</description>
    </item>
    
    <item>
      <title>btc地址生成</title>
      <link>http://localhost:1313/post/btc_address/</link>
      <pubDate>Sun, 06 Jun 2021 10:28:00 +0800</pubDate>
      
      <guid>http://localhost:1313/post/btc_address/</guid>
      <description>btc地址生成 1 2 3 4 5 6 7 8 9 Get you public key Perform Sha256 on your Public key Perform RIPEMD160 hashing on the result of Sha256 hash Add version byte in front of RIPEMD160 hash (0x00 for main net, 0x6f for testnet) Perform Sha256 hash on the extended RIPEMD160 hash Perform Sha256 hash on the result of the previous step Take the</description>
    </item>
    
    <item>
      <title>BTC devguide(3)</title>
      <link>http://localhost:1313/post/btc_devguide_3/</link>
      <pubDate>Wed, 30 Dec 2020 15:59:00 +0800</pubDate>
      
      <guid>http://localhost:1313/post/btc_devguide_3/</guid>
      <description>Operating Modes 比特币软件具有不同级别的安全性和权衡，以验证区块链 Introduction 当前，有两种主要的方法来验证区块链作为客户端：完整节点和SPV客户端。 由于不建议使用</description>
    </item>
    
    <item>
      <title>BTC devguide(2)</title>
      <link>http://localhost:1313/post/btc_devguide_2/</link>
      <pubDate>Wed, 30 Dec 2020 15:16:00 +0800</pubDate>
      
      <guid>http://localhost:1313/post/btc_devguide_2/</guid>
      <description>Transactions 交易让用户花了satoshis。 每笔交易都由几部分组成，既可以进行简单的直接付款，也可以进行复杂的交易。 Introduction 本节将描述每个部分并演示如何一起</description>
    </item>
    
    <item>
      <title>BTC devguide(1)</title>
      <link>http://localhost:1313/post/btc_devguide_1/</link>
      <pubDate>Tue, 29 Dec 2020 18:12:00 +0800</pubDate>
      
      <guid>http://localhost:1313/post/btc_devguide_1/</guid>
      <description>Block Chain 区块链系统提供了公共分类帐，有序且带有时间戳记的交易记录。 该系统用于防止重复支出和修改以前的交易记录。 Introduction 比特币网络中的每个完整节点都独立</description>
    </item>
    
    <item>
      <title>Base58Check 编码</title>
      <link>http://localhost:1313/post/base58check_encoding/</link>
      <pubDate>Tue, 29 Dec 2020 10:28:00 +0800</pubDate>
      
      <guid>http://localhost:1313/post/base58check_encoding/</guid>
      <description>本文章翻译自Base58Check encoding，如有侵权，请联系作者进行删除 Background Base58Check 是一种被用来编码比特币地址的协议 这原始比特币源码解释了为</description>
    </item>
    
    <item>
      <title>哈希算法和密钥保存</title>
      <link>http://localhost:1313/post/hashalgorithmandkeypreservation/</link>
      <pubDate>Sun, 12 Jul 2020 21:49:52 +0800</pubDate>
      
      <guid>http://localhost:1313/post/hashalgorithmandkeypreservation/</guid>
      <description>本文章翻译自Pradeep Loganathan，如有侵权，请联系作者进行删除 什么是哈希?哈希算法和密钥保存 哈希 哈希是一个单向函数，它将任意长</description>
    </item>
    
  </channel>
</rss>