<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>solidity on Even - A super concise theme for Hugo</title>
    <link>http://localhost:1313/tags/solidity/</link>
    <description>Recent content in solidity on Even - A super concise theme for Hugo</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Tue, 22 Nov 2022 00:28:00 +0800</lastBuildDate>
    
	<atom:link href="http://localhost:1313/tags/solidity/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>EIP</title>
      <link>http://localhost:1313/post/eip/</link>
      <pubDate>Tue, 22 Nov 2022 00:28:00 +0800</pubDate>
      
      <guid>http://localhost:1313/post/eip/</guid>
      <description>EIP EIP1153 https://eips.ethereum.org/EIPS/eip-1153 EIP2612 通过permit(r, s, v)来控制权限 https://eips.ethereum.org/EIPS/eip-2612 EIP3651 https://eips.ethereum.org/EIPS/eip-3651 更温暖的COINBASE. coinbase即區塊中的第一筆交易是筆特殊交易，稱為創幣交易</description>
    </item>
    
    <item>
      <title>Uniswap</title>
      <link>http://localhost:1313/post/uniswap/</link>
      <pubDate>Tue, 01 Nov 2022 00:28:00 +0800</pubDate>
      
      <guid>http://localhost:1313/post/uniswap/</guid>
      <description>uniswap uniswapv2 resources https://docs.uniswap.org/protocol/V2/introduction whitepaper: https://uniswap.org/whitepaper.pdf uniswapv2-core uniswapv2-core 架构图: uniswapv2-periphery tips uniswapv2的Oracle uniswapv2版本起，就已经提供了预言机功能，用来计算交易对的时间加权平均价</description>
    </item>
    
    <item>
      <title>Yul language</title>
      <link>http://localhost:1313/post/yul_in_solidity/</link>
      <pubDate>Wed, 19 Oct 2022 00:28:00 +0800</pubDate>
      
      <guid>http://localhost:1313/post/yul_in_solidity/</guid>
      <description>Resources  All About Data Location: https://betterprogramming.pub/solidity-tutorial-all-about-data-locations-dabd33212471 All About Solidity Data Locations - Storage: https://betterprogramming.pub/all-about-solidity-data-locations-part-i-storage-e50604bfc1ad All About Memory: https://betterprogramming.pub/solidity-tutorial-all-about-memory-1e1696d71ee4  </description>
    </item>
    
    <item>
      <title>Understanding Bytecode on Ethereum</title>
      <link>http://localhost:1313/post/bytecode_in_solidity/</link>
      <pubDate>Fri, 07 Oct 2022 00:28:00 +0800</pubDate>
      
      <guid>http://localhost:1313/post/bytecode_in_solidity/</guid>
      <description>Understanding Bytecode on Ethereum  https://medium.com/authereum/bytecode-and-init-code-and-runtime-code-oh-my-7bcd89065904  </description>
    </item>
    
    <item>
      <title>Optimizer in solidity</title>
      <link>http://localhost:1313/post/optimizer_in_solidity/</link>
      <pubDate>Sun, 25 Sep 2022 00:28:00 +0800</pubDate>
      
      <guid>http://localhost:1313/post/optimizer_in_solidity/</guid>
      <description>Optimizer in solidity 合约设计及实现变迁 v1.x版本实现，每次创建同样的合约 v2.x版本实现, 逻辑单独抽象成library,每次创建合约仅包含storage</description>
    </item>
    
    <item>
      <title>library in solidity</title>
      <link>http://localhost:1313/post/library_in_solidity/</link>
      <pubDate>Fri, 23 Sep 2022 00:28:00 +0800</pubDate>
      
      <guid>http://localhost:1313/post/library_in_solidity/</guid>
      <description>this变量 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 library MathLib { function multiply(uint a, uint b) public view returns (uint, address) { return (a * b, address(this)); } } contract Example { using MathLib for uint; address public owner = address(this); address public retAddr; function multiplyExample(uint _a, uint _b) public view returns (uint,</description>
    </item>
    
    <item>
      <title>contract security</title>
      <link>http://localhost:1313/post/contract_security/</link>
      <pubDate>Tue, 23 Aug 2022 00:28:00 +0800</pubDate>
      
      <guid>http://localhost:1313/post/contract_security/</guid>
      <description>contract security 合约安全常见原理 币安研究院：硬核解析智能合约常见漏洞原理及攻击模式: https://www.chainnews.com/articles/896074917877.html AbiReencodingHeadOverflowWithStaticArrayCleanup: https://etherscan.io/solcbuginfo?a=AbiReencodingHeadOverflowWithStaticArrayCleanup 正确使用assert(), require()和revert()</description>
    </item>
    
    <item>
      <title>solidity</title>
      <link>http://localhost:1313/post/solidity/</link>
      <pubDate>Tue, 23 Aug 2022 00:28:00 +0800</pubDate>
      
      <guid>http://localhost:1313/post/solidity/</guid>
      <description>abi https://docs.soliditylang.org/en/latest/abi-spec.html#formal-specification-of-the-encoding tools Solidity Visual Developer: https://consensys.net/diligence/blog/2019/10/solidity-visual-auditor-extension-for-vs-code/ sliter gas优化 gas优化: https://www.theblockbeats.info/news/31602 Resources solidity寻址: https://www.whatsblockchain.com/posts/c052872a.html https://blog.51cto.com/shijianfeng/5151269 self destruct: https://solidity-by-example.org/hacks/self-destruct/ 逆向decompile代码: https://ethervm.io/decompile fallback,receive规则</description>
    </item>
    
    <item>
      <title>Guessing Game</title>
      <link>http://localhost:1313/post/guess_game/</link>
      <pubDate>Sun, 07 Nov 2021 00:05:24 +0800</pubDate>
      
      <guid>http://localhost:1313/post/guess_game/</guid>
      <description>Build a Failr, Oracle-Free(no oracles allowed) Guessing Game in solidity which pits two players against each other in a game where each player tries to guess whether a randomly generated number is high or low.
  answer
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173  /** ### reference - random optimize - https://www.</description>
    </item>
    
    <item>
      <title>Inheritance in solidity</title>
      <link>http://localhost:1313/post/inheritance_in_solidity/</link>
      <pubDate>Tue, 15 Jun 2021 00:00:44 +0800</pubDate>
      
      <guid>http://localhost:1313/post/inheritance_in_solidity/</guid>
      <description>Reference 菱形继承问题: https://me.tryblockchain.org/blockchain-solidity-multi-inherit-and-call-chain.html</description>
    </item>
    
    <item>
      <title>Upgradable Contract</title>
      <link>http://localhost:1313/post/upgradable_contract/</link>
      <pubDate>Mon, 14 Jun 2021 14:47:44 +0800</pubDate>
      
      <guid>http://localhost:1313/post/upgradable_contract/</guid>
      <description>Resource 可升级合约: https://www.dtmao.cc/news_show_1340999.shtml 如何实现可升级合约: https://juejin.cn/post/6844903685776998407 create2实现可升级可约: https://mirror.xyz/franx.eth/LwJvDwe3z-T5VscKrBfnOxZPc3wxhCXaooiSoxA7f5k</description>
    </item>
    
  </channel>
</rss>