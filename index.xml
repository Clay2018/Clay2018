<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Even - A super concise theme for Hugo</title>
    <link>http://localhost:1313/</link>
    <description>Recent content on Even - A super concise theme for Hugo</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Tue, 23 Aug 2022 00:28:00 +0800</lastBuildDate>
    
	<atom:link href="http://localhost:1313/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>搜索</title>
      <link>http://localhost:1313/post/search/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/post/search/</guid>
      <description>/* 手机适配 */ @media screen and (max-width: 500px) { .search{ padding-right: 25px; } .search input{ width: 100%; } .search button{ display: none; } } /* 电脑适配 */ @media screen and (min-width: 500px) { .search{ width: 500px; } .search input{ width: 444px; } } /* 通用样式 */ .search{ margin: auto; } .search input{ outline: none; border: 2px solid #c05b4d; height: 32px; padding:</description>
    </item>
    
    <item>
      <title>contract security</title>
      <link>http://localhost:1313/post/cft/</link>
      <pubDate>Tue, 23 Aug 2022 00:28:00 +0800</pubDate>
      
      <guid>http://localhost:1313/post/cft/</guid>
      <description>WCTF  BelluminarBank: https://learnblockchain.cn/article/1989 1 2 3 4  BelluminarBank.deploy(&amp;#34;123456&amp;#34;, 1, {&amp;#39;from&amp;#39;:accounts[0], &amp;#39;value&amp;#39;:10}) BelluminarBank[0].invest(1, &amp;#34;0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1ecc80&amp;#34;, {&amp;#39;from&amp;#39;:accounts[1], &amp;#39;value&amp;#39;: 1}) BelluminarBank[0].invest(2, 0, {&amp;#39;from&amp;#39;:accounts[1], &amp;#39;value&amp;#39;: 0}) BelluminarBank[0].confiscate(1, &amp;#34;123456&amp;#34;, {&amp;#39;from&amp;#39;:accounts[1]})     </description>
    </item>
    
    <item>
      <title>solidity doc</title>
      <link>http://localhost:1313/post/solidity/</link>
      <pubDate>Tue, 23 Aug 2022 00:28:00 +0800</pubDate>
      
      <guid>http://localhost:1313/post/solidity/</guid>
      <description>Resources solidity寻址: https://www.whatsblockchain.com/posts/c052872a.html https://blog.51cto.com/shijianfeng/5151269 self destruct: https://solidity-by-example.org/hacks/self-destruct/</description>
    </item>
    
    <item>
      <title>Go mod</title>
      <link>http://localhost:1313/post/go_mod/</link>
      <pubDate>Mon, 02 May 2022 00:05:24 +0800</pubDate>
      
      <guid>http://localhost:1313/post/go_mod/</guid>
      <description>Resource go mod使用: https://www.jianshu.com/p/760c97ff644c 发展历史 GOPATH 1 2 3 4 5 6 7 8 go env -w GO111MODULE=&amp;#34;off&amp;#34; GOROOT=/usr/local/go GOPATH=/home/dev/project/go /* 按如下路径+导包路径寻找所需要的包 /usr/local/go/src/ */ go build main.go go编译项目时，只会在GOROOT和G</description>
    </item>
    
    <item>
      <title>Design pattern</title>
      <link>http://localhost:1313/post/design_pattern/</link>
      <pubDate>Sat, 09 Apr 2022 00:47:44 +0800</pubDate>
      
      <guid>http://localhost:1313/post/design_pattern/</guid>
      <description>设计原则SOLID Single Responsibility Principle 表明一个类只具备一个职责 Open Close Principle 一个类应该对扩展开发，修改关闭 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 //设计一个关于</description>
    </item>
    
    <item>
      <title>Prometheus</title>
      <link>http://localhost:1313/post/prometheus/</link>
      <pubDate>Thu, 07 Apr 2022 14:51:03 +0800</pubDate>
      
      <guid>http://localhost:1313/post/prometheus/</guid>
      <description>Resource prometheus docs: https://prometheus.io/docs/introduction/overview/ pushgateway数据上报: https://www.cnblogs.com/xiaobaozi-95/p/10684524.html</description>
    </item>
    
    <item>
      <title>GC in golang</title>
      <link>http://localhost:1313/post/gc_in_golang/</link>
      <pubDate>Wed, 06 Apr 2022 01:01:00 +0800</pubDate>
      
      <guid>http://localhost:1313/post/gc_in_golang/</guid>
      <description>Resource Golang什么时候会触发GC: https://www.jianshu.com/p/96a52a8127d9</description>
    </item>
    
    <item>
      <title>Handle timeout</title>
      <link>http://localhost:1313/post/handle_timeout/</link>
      <pubDate>Tue, 08 Mar 2022 00:00:44 +0800</pubDate>
      
      <guid>http://localhost:1313/post/handle_timeout/</guid>
      <description>超时处理 我们要探讨的问题是:如果我们遇到一个非常非常慢的API调用最终超时，并且我们假设(a)它成功或(b)失败，我们就会遇到错误。超时(或</description>
    </item>
    
    <item>
      <title>Inventory system design</title>
      <link>http://localhost:1313/post/inventory_system_design/</link>
      <pubDate>Tue, 08 Mar 2022 00:00:44 +0800</pubDate>
      
      <guid>http://localhost:1313/post/inventory_system_design/</guid>
      <description>库存服务设计 需求收集 方案评审 浏览器优化, 限流器使用，监控告警提前预报 设计难点在于库存更新和超时处理 库存更新, mysql+redis: 先更新，再删除缓存 超时处理，m</description>
    </item>
    
    <item>
      <title>Timer设计</title>
      <link>http://localhost:1313/post/timer/</link>
      <pubDate>Mon, 07 Mar 2022 00:07:44 +0800</pubDate>
      
      <guid>http://localhost:1313/post/timer/</guid>
      <description>定时任务设计 任务队列 + 轮询, cpu耗费较大+空转问题; 四叉堆 + 轮询, 空转问题; 单独时间轮 + tick轮询, cpu耗费+空转问题; 多个时间轮 + t</description>
    </item>
    
    <item>
      <title>Network</title>
      <link>http://localhost:1313/post/network/</link>
      <pubDate>Sat, 26 Feb 2022 00:47:44 +0800</pubDate>
      
      <guid>http://localhost:1313/post/network/</guid>
      <description>Resource 网络书籍: https://www.zhihu.com/question/19774914 Utils cat /proc/net/bonding/bondx 查看bond状态: https://blog.csdn.net/sdd220/article/details/77199166 bond模式: https://blog.csdn.net/qq_34870631/article/details/80625217 一个网卡配置多个IP: https://blog.csdn.net/qq_34870631/article/details/80625217 配置VLAN 1 2 3 4 5 6 7 8 #ifcfg-bond0 DEVICE=bond0 NAME=bond0 TYPE=BOND NM_CONTROLLED=no USERCTL=no BONDING_MASTER=yes BOOTPROTO=none 1 2 3 4 5 6 7 8</description>
    </item>
    
    <item>
      <title>runtime in golang</title>
      <link>http://localhost:1313/post/runtime_in_golang/</link>
      <pubDate>Sat, 26 Feb 2022 00:47:44 +0800</pubDate>
      
      <guid>http://localhost:1313/post/runtime_in_golang/</guid>
      <description>Resource 聊聊什么是Go runtime.KeepAlive: https://developer.51cto.com/article/692468.html runtime.SetFinalizer https://zhuanlan.zhihu.com/p/76504936 https://www.cnblogs.com/binHome/p/12901392.html</description>
    </item>
    
    <item>
      <title>Monitor system</title>
      <link>http://localhost:1313/post/monitor_system/</link>
      <pubDate>Sun, 20 Feb 2022 00:47:44 +0800</pubDate>
      
      <guid>http://localhost:1313/post/monitor_system/</guid>
      <description>Resource 大型互联网海量监控系统设计: https://cloud.tencent.com/developer/article/1037231 支付系统设计(六):支付系统的监控与报警: https://toutiao.io/posts/caeqfr/preview 如何设计一个监控平台: https://juejin.cn/post/6957957796088250405 美团外卖自动化业务运维系统建设: https://tech.meituan.com/2017/11/14/digger-share.html</description>
    </item>
    
    <item>
      <title>Data structure</title>
      <link>http://localhost:1313/post/data_structure/</link>
      <pubDate>Sat, 19 Feb 2022 00:00:44 +0800</pubDate>
      
      <guid>http://localhost:1313/post/data_structure/</guid>
      <description>Resource 跳跃表: https://www.jianshu.com/p/9d8296562806 一致性哈希: 原理: https://segmentfault.com/a/1190000015336117 实现: https://www.cnblogs.com/xrq730/p/5186728.html</description>
    </item>
    
    <item>
      <title>version change in golang</title>
      <link>http://localhost:1313/post/version_change_in_golang/</link>
      <pubDate>Tue, 15 Feb 2022 00:47:44 +0800</pubDate>
      
      <guid>http://localhost:1313/post/version_change_in_golang/</guid>
      <description>Go1.14 本次更新大多数变化在于工具链的实现，runtime和libraries defer性能提升 在Go1.14之前，Go中的每一个defer函数，</description>
    </item>
    
    <item>
      <title>C&#43;&#43; 类</title>
      <link>http://localhost:1313/post/virtual_func_in_c_plus_plus/</link>
      <pubDate>Mon, 14 Feb 2022 00:47:44 +0800</pubDate>
      
      <guid>http://localhost:1313/post/virtual_func_in_c_plus_plus/</guid>
      <description>Resource C++对象布局: https://mp.weixin.qq.com/s?__biz=MzkyODE5NjU2Mw==&amp;amp;mid=2247484758&amp;amp;idx=1&amp;amp;sn=4e614430f666f63ab135c13a716d07c1&amp;amp;chksm=c21d37eaf56abefc8d2a1dc3e09a8146d242475cb0900ee5a94ab6a94a991168a887f7351821&amp;amp;scene=178&amp;amp;cur_album_id=1667018561883570181#rd</description>
    </item>
    
    <item>
      <title>C&#43;&#43;11 new feature</title>
      <link>http://localhost:1313/post/c&#43;&#43;11_new_feature/</link>
      <pubDate>Mon, 14 Feb 2022 00:47:44 +0800</pubDate>
      
      <guid>http://localhost:1313/post/c&#43;&#43;11_new_feature/</guid>
      <description>Resource c++11新特性，所有知识点都在这里了: https://mp.weixin.qq.com/s/kAH-402oYgAa3GAVgJ8EaQ</description>
    </item>
    
    <item>
      <title>Stack in linux</title>
      <link>http://localhost:1313/post/stack_in_linux/</link>
      <pubDate>Mon, 14 Feb 2022 00:47:44 +0800</pubDate>
      
      <guid>http://localhost:1313/post/stack_in_linux/</guid>
      <description>Resource Linux中的各种栈: https://mp.weixin.qq.com/s?__biz=MzkyODE5NjU2Mw==&amp;amp;mid=2247490208&amp;amp;idx=1&amp;amp;sn=c920ca7b7449222f8dd80efcb88fc36f&amp;amp;chksm=c21d281cf56aa10a7f07ed93c49e334203c00cdfe83acd40c0fb0c7f28fbc8052447cb5d3b44&amp;amp;scene=178&amp;amp;cur_album_id=1667018561883570181#rd</description>
    </item>
    
    <item>
      <title>进程间通讯</title>
      <link>http://localhost:1313/post/inter_process_communication/</link>
      <pubDate>Mon, 14 Feb 2022 00:47:44 +0800</pubDate>
      
      <guid>http://localhost:1313/post/inter_process_communication/</guid>
      <description>Resource 进程间通信: https://www.jianshu.com/p/c1015f5ffa74</description>
    </item>
    
    <item>
      <title>Behavior question</title>
      <link>http://localhost:1313/post/bq/</link>
      <pubDate>Sat, 12 Feb 2022 00:47:44 +0800</pubDate>
      
      <guid>http://localhost:1313/post/bq/</guid>
      <description>Resource 什么是BQ行为问题？如何在大厂面试中搞定它？: http://www.360doc.com/content/21/0405/14/44716758_970691903.shtml 应对100道行为面试题，只需3各小故事: https://www.myopt.org/post/%E5%BA%94%E5%AF%B9100%E9%81%93%E8%A1%8C%E4%B8%BA%E9%9D%A2%E8%AF%95%E9%A2%98%EF%BC%8C%E5%8F%AA%E9%9C%803%E4%B8%AA%E5%B0%8F%E6%95%85%E4%BA%8B</description>
    </item>
    
    <item>
      <title>Linux Kernel Map</title>
      <link>http://localhost:1313/post/linux/</link>
      <pubDate>Thu, 10 Feb 2022 00:47:44 +0800</pubDate>
      
      <guid>http://localhost:1313/post/linux/</guid>
      <description>Resource  Linux Kernel Map: https://blog.csdn.net/Rong_Toa/article/details/109430393  </description>
    </item>
    
    <item>
      <title>IPSEC Protocol</title>
      <link>http://localhost:1313/post/ipsec_protocol/</link>
      <pubDate>Thu, 10 Feb 2022 00:00:44 +0800</pubDate>
      
      <guid>http://localhost:1313/post/ipsec_protocol/</guid>
      <description>Resource IPSEC介绍: https://blog.csdn.net/NEUChords/article/details/92968314</description>
    </item>
    
    <item>
      <title>How to negotiate your package</title>
      <link>http://localhost:1313/post/how_to_negotiate_your_package/</link>
      <pubDate>Mon, 07 Feb 2022 00:47:44 +0800</pubDate>
      
      <guid>http://localhost:1313/post/how_to_negotiate_your_package/</guid>
      <description>Resource  Counter Offer Template: https://helloacm.com/an-example-email-to-negotiate-your-package/  </description>
    </item>
    
    <item>
      <title>Bug in etcd</title>
      <link>http://localhost:1313/post/bug_in_etcd/</link>
      <pubDate>Sun, 06 Feb 2022 00:00:44 +0800</pubDate>
      
      <guid>http://localhost:1313/post/bug_in_etcd/</guid>
      <description>记一次ETCD watch问题导致缓存不一致: https://zhuanlan.zhihu.com/p/332618994</description>
    </item>
    
    <item>
      <title>MQ</title>
      <link>http://localhost:1313/post/mq/</link>
      <pubDate>Sun, 06 Feb 2022 00:00:44 +0800</pubDate>
      
      <guid>http://localhost:1313/post/mq/</guid>
      <description>Resources MQ详解及四大MQ比较: https://www.cnblogs.com/duanxz/p/3143570.html 技术选型 RocketMQ or Kaflka: https://zhuanlan.zhihu.com/p/60196818</description>
    </item>
    
    <item>
      <title>optimization in golang</title>
      <link>http://localhost:1313/post/optimization_in_golang/</link>
      <pubDate>Sun, 06 Feb 2022 00:00:44 +0800</pubDate>
      
      <guid>http://localhost:1313/post/optimization_in_golang/</guid>
      <description>Resource 聊聊Go内存优化和相关底层机制: https://wudaijun.com/2019/09/go-performance-optimization/</description>
    </item>
    
    <item>
      <title>rocketmq</title>
      <link>http://localhost:1313/post/rocketmq/</link>
      <pubDate>Sun, 06 Feb 2022 00:00:44 +0800</pubDate>
      
      <guid>http://localhost:1313/post/rocketmq/</guid>
      <description>Resources RocketMQ原理&amp;amp;复杂分布式事务解法: https://www.jianshu.com/p/2838890f3284 rocketMQ消息发送流程: https://www.jianshu.com/p/3779291d8344 RocketMQ: https://www.cnblogs.com/weifeng1463/p/12889300.html</description>
    </item>
    
    <item>
      <title>关于配置中心、元数据中心和注册中心</title>
      <link>http://localhost:1313/post/about_configuration_center_metadata_center_and_registry/</link>
      <pubDate>Sat, 05 Feb 2022 00:00:44 +0800</pubDate>
      
      <guid>http://localhost:1313/post/about_configuration_center_metadata_center_and_registry/</guid>
      <description>Resources 关于配置中心，元数据中心和注册中心: https://zhuanlan.zhihu.com/p/103476722</description>
    </item>
    
    <item>
      <title>RabbitMQ</title>
      <link>http://localhost:1313/post/rabbitmq/</link>
      <pubDate>Fri, 04 Feb 2022 00:00:44 +0800</pubDate>
      
      <guid>http://localhost:1313/post/rabbitmq/</guid>
      <description>RabbitMQ作用及其出现背景 作用: 削峰，解耦，异步调用 RabbitMQ特性和好处: 开源 轻量级 面向大多数现代语言的客户端开发库 灵活控制消息</description>
    </item>
    
    <item>
      <title>disruptor</title>
      <link>http://localhost:1313/post/disruptor/</link>
      <pubDate>Fri, 14 Jan 2022 00:05:24 +0800</pubDate>
      
      <guid>http://localhost:1313/post/disruptor/</guid>
      <description>Resources 高性能队列: https://tech.meituan.com/2016/11/18/disruptor.html jdk中的队列: https://juejin.cn/post/6844903648875528206#heading-13</description>
    </item>
    
    <item>
      <title>log</title>
      <link>http://localhost:1313/post/log_framework/</link>
      <pubDate>Fri, 14 Jan 2022 00:05:24 +0800</pubDate>
      
      <guid>http://localhost:1313/post/log_framework/</guid>
      <description>Resources log4j架构: http://aofengblog.com/2011/05/02/Apache-Log4j-%E6%9E%B6%E6%9E%84/ golang日志入门与选型: https://segmentfault.com/a/1190000040977469?utm_source=sf-similar-article</description>
    </item>
    
    <item>
      <title>Difference between atomic and mutex</title>
      <link>http://localhost:1313/post/difference_between_atomic_and_mutex/</link>
      <pubDate>Tue, 11 Jan 2022 00:45:44 +0800</pubDate>
      
      <guid>http://localhost:1313/post/difference_between_atomic_and_mutex/</guid>
      <description>Resources 原子操作和互斥锁的区别: https://cloud.tencent.com/developer/article/1645697</description>
    </item>
    
    <item>
      <title>split db practice</title>
      <link>http://localhost:1313/post/split_db_practice/</link>
      <pubDate>Tue, 11 Jan 2022 00:45:44 +0800</pubDate>
      
      <guid>http://localhost:1313/post/split_db_practice/</guid>
      <description>Resources: 大众点评订单系统分库分表实践: https://tech.meituan.com/2016/11/18/dianping-order-db-sharding.html</description>
    </item>
    
    <item>
      <title>zero copy in linux</title>
      <link>http://localhost:1313/post/zero_copy_in_linux/</link>
      <pubDate>Tue, 11 Jan 2022 00:45:44 +0800</pubDate>
      
      <guid>http://localhost:1313/post/zero_copy_in_linux/</guid>
      <description>Resources 深入剖析linux IO原理和几种零拷贝的实现: https://zhuanlan.zhihu.com/p/83398714 Go语言中的零拷贝优化: https://strikefreedom.top/pipe-pool-for-splice-in-go linux io and zero copy: https://strikefreedom.top/linux-io-and-zero-copy</description>
    </item>
    
    <item>
      <title>io.WriteString()分析</title>
      <link>http://localhost:1313/post/io_write_string_analysis/</link>
      <pubDate>Sun, 09 Jan 2022 00:45:44 +0800</pubDate>
      
      <guid>http://localhost:1313/post/io_write_string_analysis/</guid>
      <description>问题 内存管理在Golang中是棘手的，我们可能相信golang本身已具备内存自动管理功能，可以从此解放出来。但上周的某个功能测试结果让我改变</description>
    </item>
    
    <item>
      <title>pprof in golang</title>
      <link>http://localhost:1313/post/pprof_in_golang/</link>
      <pubDate>Sun, 09 Jan 2022 00:45:44 +0800</pubDate>
      
      <guid>http://localhost:1313/post/pprof_in_golang/</guid>
      <description>CPU pprof 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 package main import ( &amp;#34;fmt&amp;#34; &amp;#34;net/http&amp;#34; _ &amp;#34;net/http/pprof&amp;#34; &amp;#34;time&amp;#34; ) func main() { go func() { ticker := time.NewTicker(time.Second) for { select { case t := &amp;lt;- ticker.C: fmt.Println(&amp;#34;Current time:&amp;#34;, t) default: } } }() http.ListenAndServe(&amp;#34;:8080&amp;#34;, nil) } 1 2 3 4 #cmdline go run main.go go</description>
    </item>
    
    <item>
      <title>top command</title>
      <link>http://localhost:1313/post/top/</link>
      <pubDate>Mon, 03 Jan 2022 14:47:44 +0800</pubDate>
      
      <guid>http://localhost:1313/post/top/</guid>
      <description>top命令 进程的优先级 cpu利用率和负载 cpu利用率是对一个时间段内CPU使用情况的统计,通过这个指标可以看出某一个时间段内CPU被占用的情</description>
    </item>
    
    <item>
      <title>CPU核数</title>
      <link>http://localhost:1313/post/cpu/</link>
      <pubDate>Mon, 03 Jan 2022 00:47:44 +0800</pubDate>
      
      <guid>http://localhost:1313/post/cpu/</guid>
      <description>计算机系统架构 SMP, NUMA, MPP是目前主流得计算机系统架构 SMP 对称多处理架构。在这样得系统中，多个CPU对称工作，无主从关系。所有的CPU共享全部资源</description>
    </item>
    
    <item>
      <title>code writing</title>
      <link>http://localhost:1313/post/code_writing/</link>
      <pubDate>Mon, 03 Jan 2022 00:05:24 +0800</pubDate>
      
      <guid>http://localhost:1313/post/code_writing/</guid>
      <description>Resources  my logging best practices: https://tuhrig.de/my-logging-best-practices/  </description>
    </item>
    
    <item>
      <title>blockchain website</title>
      <link>http://localhost:1313/post/blockchain_website/</link>
      <pubDate>Sun, 19 Dec 2021 00:28:00 +0800</pubDate>
      
      <guid>http://localhost:1313/post/blockchain_website/</guid>
      <description>Resources   The most trusted platform to manage digital assets on Ethereum: https://gnosis-safe.io/#getting-started
  Community funding for people and projects: https://juicebox.money/#/
  </description>
    </item>
    
    <item>
      <title>container</title>
      <link>http://localhost:1313/post/container/</link>
      <pubDate>Sun, 19 Dec 2021 00:28:00 +0800</pubDate>
      
      <guid>http://localhost:1313/post/container/</guid>
      <description>容器和虚拟机区别 容器是将进程有效划分的一个独立空间，以便在独立的空间之间平衡资源使用冲突的技术。本质上容器是一种特殊的进程，其核心功能是通过</description>
    </item>
    
    <item>
      <title>Computer Architecture</title>
      <link>http://localhost:1313/post/computer_architecture/</link>
      <pubDate>Sun, 21 Nov 2021 10:06:24 +0800</pubDate>
      
      <guid>http://localhost:1313/post/computer_architecture/</guid>
      <description>Resources 计算机体系结构基础: https://foxsen.github.io/archbase/%E5%BC%95%E8%A8%80.html#%E4%BB%80%E4%B9%88%E6%98%AF%E8%AE%A1%E7%AE%97%E6%9C%BA</description>
    </item>
    
    <item>
      <title>VLAN</title>
      <link>http://localhost:1313/post/vlan/</link>
      <pubDate>Sun, 21 Nov 2021 00:47:44 +0800</pubDate>
      
      <guid>http://localhost:1313/post/vlan/</guid>
      <description>Resources 图文并茂VLAN详解: https://blog.51cto.com/u_6930123/2115373 VLAN详解: https://www.jb51.net/network/774813.html</description>
    </item>
    
    <item>
      <title>Guessing Game</title>
      <link>http://localhost:1313/post/guess_game/</link>
      <pubDate>Sun, 07 Nov 2021 00:05:24 +0800</pubDate>
      
      <guid>http://localhost:1313/post/guess_game/</guid>
      <description>Build a Failr, Oracle-Free(no oracles allowed) Guessing Game in solidity which pits two players against each other in a game where each player tries to guess whether a randomly generated number is high or low.
  answer
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173  /** ### reference - random optimize - https://www.</description>
    </item>
    
    <item>
      <title>求解数组中唯二的两个数字</title>
      <link>http://localhost:1313/post/xor/</link>
      <pubDate>Sun, 07 Nov 2021 00:05:24 +0800</pubDate>
      
      <guid>http://localhost:1313/post/xor/</guid>
      <description>一个数组中，存在两个只出现一次的数字，其余的数字均出现两次，求这两个数字是多少 1 2 3 4 5 6 #求解步骤: #假设两个数分别是a, b c = arr[0] xor arr[1] xor arr[2]</description>
    </item>
    
    <item>
      <title>BTC开发资料</title>
      <link>http://localhost:1313/post/btc/</link>
      <pubDate>Tue, 26 Oct 2021 00:47:44 +0800</pubDate>
      
      <guid>http://localhost:1313/post/btc/</guid>
      <description>Resources RPC API Reference: https://developer.bitcoin.org/reference/rpc/index.html btc explorer https://www.oklink.com/btc/address/33WswvHHQMVYUQQiuoN4MYXRrjTh8zuKbq tron api doc: https://developers.tron.network/reference#tronweb-object-1 eos testnet: https://www.alohaeos.com/zh/tools/testnets sign bitcoin cash/sv/abc transaction: https://apexpl.github.io/bitcoin_cash_sv_abc_transaction_signatures.html</description>
    </item>
    
    <item>
      <title>估算的一些方法</title>
      <link>http://localhost:1313/post/some_estimate_method/</link>
      <pubDate>Tue, 26 Oct 2021 00:47:44 +0800</pubDate>
      
      <guid>http://localhost:1313/post/some_estimate_method/</guid>
      <description>Resources 估算的一些方法: https://mp.weixin.qq.com/s/fH-AJpE99ulSLbC_1jxlqw</description>
    </item>
    
    <item>
      <title>Floating Point</title>
      <link>http://localhost:1313/post/floating_point/</link>
      <pubDate>Sat, 16 Oct 2021 00:28:00 +0800</pubDate>
      
      <guid>http://localhost:1313/post/floating_point/</guid>
      <description>Resources 15张图带你深入理解浮点数: https://mp.weixin.qq.com/s/DGP4rENdy-N1VyZLS_uV4g 浮点数精度丢失问题详解: https://mp.weixin.qq.com/s/yjEkZrpIOAUAEknKTxC3YQ</description>
    </item>
    
    <item>
      <title>Business</title>
      <link>http://localhost:1313/post/business/</link>
      <pubDate>Sat, 16 Oct 2021 00:00:44 +0800</pubDate>
      
      <guid>http://localhost:1313/post/business/</guid>
      <description>Resources 对话杨浩涌: https://36kr.com/p/1440631980329603</description>
    </item>
    
    <item>
      <title>shenjian channel</title>
      <link>http://localhost:1313/post/shenjian_channel/</link>
      <pubDate>Fri, 15 Oct 2021 00:00:44 +0800</pubDate>
      
      <guid>http://localhost:1313/post/shenjian_channel/</guid>
      <description>xx 技术和管理如何平衡 第一，带好团队和做好技术一样，能够成为一个职场人的核心竞争力。代码写得又快又好，交付的系统没有Bug,这样的技术人产品喜</description>
    </item>
    
    <item>
      <title>Linux内核网络</title>
      <link>http://localhost:1313/post/linux_kernel_network/</link>
      <pubDate>Wed, 06 Oct 2021 00:47:44 +0800</pubDate>
      
      <guid>http://localhost:1313/post/linux_kernel_network/</guid>
      <description>讨论Linux内核网络栈地实现及其原理，深入而详尽地分析网络子系统及其架构。讲解数据包在Linux内核网络栈中的传输过程，阐述其与网络各层及</description>
    </item>
    
    <item>
      <title>Data Link Layer</title>
      <link>http://localhost:1313/post/data_link_layer/</link>
      <pubDate>Tue, 05 Oct 2021 10:28:00 +0800</pubDate>
      
      <guid>http://localhost:1313/post/data_link_layer/</guid>
      <description>概念 网卡 网卡是一块被设计用来允许在计算机网络上进行通讯的计算机硬件。其拥有MAC地址。工作在数据链路层(L2), 功能一是将数据封装成帧，并通</description>
    </item>
    
    <item>
      <title>interview</title>
      <link>http://localhost:1313/post/interview/</link>
      <pubDate>Tue, 05 Oct 2021 10:28:00 +0800</pubDate>
      
      <guid>http://localhost:1313/post/interview/</guid>
      <description>Resources 海归软件工程师起飞指南: https://www.sohu.com/a/328902066_747492</description>
    </item>
    
    <item>
      <title>how to talk about your project</title>
      <link>http://localhost:1313/post/how_to_talk_about_your_project/</link>
      <pubDate>Fri, 17 Sep 2021 23:45:44 +0800</pubDate>
      
      <guid>http://localhost:1313/post/how_to_talk_about_your_project/</guid>
      <description>Resource 石墨文档基于K8S的Go微服务实践(上篇): https://mp.weixin.qq.com/s/2YrW_6My-20_DRyKRnT-tA</description>
    </item>
    
    <item>
      <title>microservice</title>
      <link>http://localhost:1313/post/microservice/</link>
      <pubDate>Thu, 16 Sep 2021 00:45:44 +0800</pubDate>
      
      <guid>http://localhost:1313/post/microservice/</guid>
      <description>Resources xx: 微服务解决了集中式架构的单体应用等不少问题，比如扩展性、弹性收缩能力、小规模团队的敏捷开发等待，但同时不少项目因为微服务拆分过度，导致项</description>
    </item>
    
    <item>
      <title>IP</title>
      <link>http://localhost:1313/post/ip/</link>
      <pubDate>Wed, 15 Sep 2021 00:45:44 +0800</pubDate>
      
      <guid>http://localhost:1313/post/ip/</guid>
      <description>虚拟网桥 brctl命令 1 2 3 4 5 6 7 8 9 10 11 #查看网桥信息 brctl show #给网桥添加ip ifconfig brtest0 199.199.100.1 ifconfig brtest0 down brctl delbr brtest0 #不需要STP(生成树)协议 brctl stp br0 off 网桥配置</description>
    </item>
    
    <item>
      <title>Delay Queue</title>
      <link>http://localhost:1313/post/delay_queue/</link>
      <pubDate>Mon, 06 Sep 2021 00:47:44 +0800</pubDate>
      
      <guid>http://localhost:1313/post/delay_queue/</guid>
      <description>Resources delay queue的几种实现简介: https://mp.weixin.qq.com/s/zjmVoj0nM2FZDelYaebdDw 延迟队列rabbitmq实现: https://mp.weixin.qq.com/s/I8I5PJMfDSsLkmLHiuIavw</description>
    </item>
    
    <item>
      <title>panic in golang</title>
      <link>http://localhost:1313/post/panic_in_golang/</link>
      <pubDate>Sun, 05 Sep 2021 00:47:44 +0800</pubDate>
      
      <guid>http://localhost:1313/post/panic_in_golang/</guid>
      <description>Resources panic的三种触发方式: https://mp.weixin.qq.com/s/cs_jLLoaq4rweVYFbeJoFw panic实现: https://mp.weixin.qq.com/s/-tYjR9K6tWG3aNOeGFsT3Q</description>
    </item>
    
    <item>
      <title>sync in golang</title>
      <link>http://localhost:1313/post/sync_in_golang/</link>
      <pubDate>Sun, 05 Sep 2021 00:47:44 +0800</pubDate>
      
      <guid>http://localhost:1313/post/sync_in_golang/</guid>
      <description>Resources sync.Once sync.Once()的妙用: https://mp.weixin.qq.com/s/7QyQS9DQj1czA6BVR6ywYA sync.Once()实现原理: https://segmentfault.com/a/1190000039294152 sync.WaitGroup()的实现原理: https://zhuanlan.zhihu.com/p/344973865</description>
    </item>
    
    <item>
      <title>interface in golang</title>
      <link>http://localhost:1313/post/interface_in_golang/</link>
      <pubDate>Tue, 31 Aug 2021 00:00:24 +0800</pubDate>
      
      <guid>http://localhost:1313/post/interface_in_golang/</guid>
      <description>Resources []int能转换为[]interface吗: https://mp.weixin.qq.com/s/tqR5zMPobm20lao-2QNrVA</description>
    </item>
    
    <item>
      <title>NAS</title>
      <link>http://localhost:1313/post/nas/</link>
      <pubDate>Sun, 08 Aug 2021 01:01:00 +0800</pubDate>
      
      <guid>http://localhost:1313/post/nas/</guid>
      <description>Resources nas服务器搭建与配置: https://blog.csdn.net/qq_38265137/article/details/83146421</description>
    </item>
    
    <item>
      <title>PA first lesson</title>
      <link>http://localhost:1313/post/pa_first_lesson/</link>
      <pubDate>Sun, 08 Aug 2021 01:01:00 +0800</pubDate>
      
      <guid>http://localhost:1313/post/pa_first_lesson/</guid>
      <description>入职第一课堂 战略执行: 战略前瞻、商业以实、规划分析、规划执行 管理决策: 管理组织、管理他人、管理自我、管理业务 科技创新: 前言创新、敏捷开发、大</description>
    </item>
    
    <item>
      <title>git</title>
      <link>http://localhost:1313/post/git/</link>
      <pubDate>Fri, 06 Aug 2021 00:05:24 +0800</pubDate>
      
      <guid>http://localhost:1313/post/git/</guid>
      <description>Resources git仓库操作: https://mp.weixin.qq.com/s/s_pNeT1lMlVDbjO37Fys4A git仓库过大, clone不下来解决方法: https://www.cnblogs.com/ZhaoWeiNotes/p/13920660.html git只下载最新代码: https://zhuanlan.zhihu.com/p/413110403</description>
    </item>
    
    <item>
      <title>职业要求</title>
      <link>http://localhost:1313/post/requirements/</link>
      <pubDate>Fri, 06 Aug 2021 00:05:24 +0800</pubDate>
      
      <guid>http://localhost:1313/post/requirements/</guid>
      <description>P9 P5、P6被要求独立完成任务;P7要求前瞻性,能把不同点的事情串在一起，变成一条线;P8则需要有结构化的思维，能把不同的事、交错的线，变成</description>
    </item>
    
    <item>
      <title>tcp泄漏操作系统信息</title>
      <link>http://localhost:1313/post/get_os_by_tcp/</link>
      <pubDate>Thu, 05 Aug 2021 00:05:24 +0800</pubDate>
      
      <guid>http://localhost:1313/post/get_os_by_tcp/</guid>
      <description>Resources 哈哈！TCP泄露了操作系统信息···: https://mp.weixin.qq.com/s/FIUDFL6zd3Nkf4Vvb6ajLg</description>
    </item>
    
    <item>
      <title>Sync map在Go中运用</title>
      <link>http://localhost:1313/post/sync_map_in_go/</link>
      <pubDate>Wed, 04 Aug 2021 23:05:24 +0800</pubDate>
      
      <guid>http://localhost:1313/post/sync_map_in_go/</guid>
      <description>Resource Go sync map 的内部实现: https://mp.weixin.qq.com/s/TGBSUYLiuBaoi3pNbN0BOQ sync map详解: https://blog.csdn.net/a348752377/article/details/104972194 RWMutex内部实现: https://sreramk.medium.com/go-sync-rwmutex-internals-and-usage-explained-9eb15865bba</description>
    </item>
    
    <item>
      <title>他人面试经历</title>
      <link>http://localhost:1313/post/interview_experience_of_others/</link>
      <pubDate>Sun, 01 Aug 2021 00:00:44 +0800</pubDate>
      
      <guid>http://localhost:1313/post/interview_experience_of_others/</guid>
      <description>Resources 一个学渣的阿里之路: https://mp.weixin.qq.com/s/JT9e-inlL9F1bjT40sNaLA 渣渣菜鸡的蚂蚁金服面试经历(一): https://mp.weixin.qq.com/s/bNXyjo9ywdOkAbesNTrMoA 渣渣菜鸡的蚂蚁金服面试经历(一): https://mp.weixin.qq.com/s/D-tvQBRJbYPLwzj7KuvqHg 渣渣菜鸡的有赞面试经历: https://mp.weixin.qq.com/s/wDDsa5na4b3MSdsIgh3upw 面试过阿里等互联网</description>
    </item>
    
    <item>
      <title>虚拟机知识</title>
      <link>http://localhost:1313/post/lxc/</link>
      <pubDate>Sun, 01 Aug 2021 00:00:44 +0800</pubDate>
      
      <guid>http://localhost:1313/post/lxc/</guid>
      <description>源码安装lxc ``` ``` lxc创建容器 lxc源码安装(./configure --prefix=/xx, 是其lxc-ls存放目录) 容器创建后存放目录 ~/.local/sha</description>
    </item>
    
    <item>
      <title>Elasticsearch</title>
      <link>http://localhost:1313/post/elasticsearch/</link>
      <pubDate>Sat, 31 Jul 2021 00:00:44 +0800</pubDate>
      
      <guid>http://localhost:1313/post/elasticsearch/</guid>
      <description>Resources elasticsearch亿级数据检索深度优化: https://mp.weixin.qq.com/s/Vp77RZpfnB4TJIg-DmwzUg</description>
    </item>
    
    <item>
      <title>ETCD</title>
      <link>http://localhost:1313/post/etcd/</link>
      <pubDate>Sat, 31 Jul 2021 00:00:44 +0800</pubDate>
      
      <guid>http://localhost:1313/post/etcd/</guid>
      <description>Resource 基于etcd的分布式锁: https://www.jianshu.com/p/8a4dc6d900cf etcd的watch机制 https://blog.csdn.net/zl1zl2zl3/article/details/79627412 https://www.lixueduan.com/post/etcd/05-watch/ etcd读写请求流程: https://blog.csdn.net/wohu1104/article/details/116244730 只读请求优化: https://mrcroxx.github.io/posts/code-reading/etcdraft-made-simple/6-readonly/ 关于etcd的一些谣言: https://cloud.tencent.com/developer/article/1551687 蚂蚁集团万级规模k</description>
    </item>
    
    <item>
      <title>Go中的map</title>
      <link>http://localhost:1313/post/map_in_golang/</link>
      <pubDate>Mon, 19 Jul 2021 00:00:44 +0800</pubDate>
      
      <guid>http://localhost:1313/post/map_in_golang/</guid>
      <description>Resource map中的删除: https://mp.weixin.qq.com/s/fTyfcBhRGNo3Q3Gl12_XNw</description>
    </item>
    
    <item>
      <title>TCP</title>
      <link>http://localhost:1313/post/tcp/</link>
      <pubDate>Sun, 18 Jul 2021 00:00:44 +0800</pubDate>
      
      <guid>http://localhost:1313/post/tcp/</guid>
      <description>Resource 面试必备: https://mp.weixin.qq.com/s/iHW0hj29fBkgviINoEE4nw</description>
    </item>
    
    <item>
      <title>Go语言的优势和劣势</title>
      <link>http://localhost:1313/post/advantages_and_disadvantages_in_go/</link>
      <pubDate>Wed, 07 Jul 2021 01:01:00 +0800</pubDate>
      
      <guid>http://localhost:1313/post/advantages_and_disadvantages_in_go/</guid>
      <description>Resources GopherChina 2021 Ian说完整泛型实现将在Go1.18发布(会议实录): https://mp.weixin.qq.com/s/RFfa-A0DomH2pXz4arAVnA</description>
    </item>
    
    <item>
      <title>内存访问</title>
      <link>http://localhost:1313/post/memory_access/</link>
      <pubDate>Wed, 07 Jul 2021 01:01:00 +0800</pubDate>
      
      <guid>http://localhost:1313/post/memory_access/</guid>
      <description>每个程序员都应该知道的CPU知识: https://mp.weixin.qq.com/s/fzFNRUBFlTi3p71CpTopRw 结构体字节对齐: https://mp.weixin.qq.com/s/qHeM_eJ33m-vH6CmqUYnOg</description>
    </item>
    
    <item>
      <title>Scheduling in Golang</title>
      <link>http://localhost:1313/post/schdule_in_golang/</link>
      <pubDate>Tue, 29 Jun 2021 00:47:44 +0800</pubDate>
      
      <guid>http://localhost:1313/post/schdule_in_golang/</guid>
      <description>gopark and goready  https://blog.csdn.net/u010853261/article/details/85887948  </description>
    </item>
    
    <item>
      <title>Tree</title>
      <link>http://localhost:1313/post/tree/</link>
      <pubDate>Tue, 29 Jun 2021 00:00:44 +0800</pubDate>
      
      <guid>http://localhost:1313/post/tree/</guid>
      <description>平衡二叉树 平衡二叉树: 二叉树的每个节点的左右子树的高度差的绝对值不超过1 判断一棵树是否是平衡二叉树 1 2 3 4 5 6 例子: 输入: 给定二叉树 [3,9,20,null,null,15,7] 输出:</description>
    </item>
    
    <item>
      <title>循环移动数组</title>
      <link>http://localhost:1313/post/loop_move_array/</link>
      <pubDate>Mon, 28 Jun 2021 00:00:44 +0800</pubDate>
      
      <guid>http://localhost:1313/post/loop_move_array/</guid>
      <description>循环移动数组 给定一个数组和正整数n(n 小于数组长度), 请求此数组循环左移n个位置, 要求空间复杂度O(1) 例子: 输入: [1, 2, 3, 4, 5] 2 输出: [3, 4, 5,</description>
    </item>
    
    <item>
      <title>Linux的五种io模型</title>
      <link>http://localhost:1313/post/io_model_in_linux/</link>
      <pubDate>Sun, 27 Jun 2021 00:47:44 +0800</pubDate>
      
      <guid>http://localhost:1313/post/io_model_in_linux/</guid>
      <description>Resource Linux的五种io模型: https://mp.weixin.qq.com/s/qCZKTJB25kSGVhlAnGFaEQ</description>
    </item>
    
    <item>
      <title>从零开始搭建创业公司后台技术栈</title>
      <link>http://localhost:1313/post/build_backend_from_zero/</link>
      <pubDate>Sun, 27 Jun 2021 00:47:44 +0800</pubDate>
      
      <guid>http://localhost:1313/post/build_backend_from_zero/</guid>
      <description>Resource 从零开始搭建创业公司后台技术栈: https://mp.weixin.qq.com/s/Ukn9AVvxVxB6phKcBykVsw 集团IT技术架构规划方案: https://mp.weixin.qq.com/s/RGvWIlm4SO24ofW5icK3iw</description>
    </item>
    
    <item>
      <title>分布式事务之底层原理揭秘</title>
      <link>http://localhost:1313/post/distributed_transaction/</link>
      <pubDate>Sun, 27 Jun 2021 00:47:44 +0800</pubDate>
      
      <guid>http://localhost:1313/post/distributed_transaction/</guid>
      <description>Resource 分布式事务之底层原理揭秘: https://mp.weixin.qq.com/s/jJBlSHLTvxNPl3maYMpccQ</description>
    </item>
    
    <item>
      <title>技术演讲</title>
      <link>http://localhost:1313/post/tech_speech/</link>
      <pubDate>Sun, 27 Jun 2021 00:47:44 +0800</pubDate>
      
      <guid>http://localhost:1313/post/tech_speech/</guid>
      <description>Resource 技术演讲,如何快速做到80分: https://mp.weixin.qq.com/s/u6gtUF5yz80vRpImVOloaw 聊聊如何做技术分享: https://mp.weixin.qq.com/s/uyrQ528udyhydcB1mRMlOg</description>
    </item>
    
    <item>
      <title>数据分片</title>
      <link>http://localhost:1313/post/data_fragment/</link>
      <pubDate>Sun, 27 Jun 2021 00:47:44 +0800</pubDate>
      
      <guid>http://localhost:1313/post/data_fragment/</guid>
      <description>Resource 带着问题学习分布式系统之数据分片: https://mp.weixin.qq.com/s/M0QvQ6JVQVZAN8kucPyoaA</description>
    </item>
    
    <item>
      <title>职业-他人感想与经历</title>
      <link>http://localhost:1313/post/career/</link>
      <pubDate>Sun, 27 Jun 2021 00:47:44 +0800</pubDate>
      
      <guid>http://localhost:1313/post/career/</guid>
      <description>Resource 结束12年深漂生活！武汉，我来了!: https://mp.weixin.qq.com/s/I5WbUUA2DEZvcFftEw6GrQ 大龄码农的新西兰移民之路: https://mp.weixin.qq.com/s/H49uoTrhWrFVlsgSaPLSBA 北漂8年，撤退杭州: https://mp.weixin.qq.com/s/o9-MkdBZ-7mg3jdRvOLXPg 持炬之人要内观自我: https://mp.weixin.qq.com/s/UL1yHctmVtIvz2PnmAAzNw 你会正确与HR谈薪资吗: https://mp.weixin.qq.com/s/umlWthKW8Ij4jPy0GiCzGw Counter</description>
    </item>
    
    <item>
      <title>虚拟内存</title>
      <link>http://localhost:1313/post/virtual_memory/</link>
      <pubDate>Sun, 27 Jun 2021 00:47:44 +0800</pubDate>
      
      <guid>http://localhost:1313/post/virtual_memory/</guid>
      <description>Resource 虚拟内存: https://mp.weixin.qq.com/s/g5I7un3-lpffAk6UFes8DA</description>
    </item>
    
    <item>
      <title>调度系统设计</title>
      <link>http://localhost:1313/post/scheduling_system_design/</link>
      <pubDate>Sun, 27 Jun 2021 00:47:44 +0800</pubDate>
      
      <guid>http://localhost:1313/post/scheduling_system_design/</guid>
      <description>Resource 调度系统设计精要: https://www.sohu.com/a/370119881_657921</description>
    </item>
    
    <item>
      <title>限流器</title>
      <link>http://localhost:1313/post/rate_limiter/</link>
      <pubDate>Sun, 27 Jun 2021 00:47:44 +0800</pubDate>
      
      <guid>http://localhost:1313/post/rate_limiter/</guid>
      <description>Resource 限流算法实践: https://www.infoq.cn/article/iPxNuQWU3lGwXc8J7tZW</description>
    </item>
    
    <item>
      <title>Golang语言遇到的bug</title>
      <link>http://localhost:1313/post/bug_in_golang/</link>
      <pubDate>Sun, 27 Jun 2021 00:00:44 +0800</pubDate>
      
      <guid>http://localhost:1313/post/bug_in_golang/</guid>
      <description>Resource 分析Go time.After 引起内存暴增OOM问题: https://mp.weixin.qq.com/s/jaIdqF0bFpHz_eyPsHjbwQ Go gctrace 引起runtime 调度阻塞: https://mp.weixin.qq.com/s/eHEvVzmpPYXAQgcdd_B55w 高并发场景下 disk io 引发的高时延问题: https://mp.weixin.qq.com/s/e3peaNGwIuNkldvnP0pDug 一个日志打点引发的OOM: https://mp.weixin.qq.com/s/8puLJSJ3GeXnmDlMxdzGgQ 为什</description>
    </item>
    
    <item>
      <title>Go中的init函数</title>
      <link>http://localhost:1313/post/init_in_golang/</link>
      <pubDate>Sun, 27 Jun 2021 00:00:44 +0800</pubDate>
      
      <guid>http://localhost:1313/post/init_in_golang/</guid>
      <description>Resource init函数: https://studygolang.com/articles/13865?fr=sidebar</description>
    </item>
    
    <item>
      <title>有赞TCP网络编程最佳实践</title>
      <link>http://localhost:1313/post/you_zan_tcpwang_luo_bian_cheng_zui_jia_shi_jian/</link>
      <pubDate>Tue, 22 Jun 2021 01:01:00 +0800</pubDate>
      
      <guid>http://localhost:1313/post/you_zan_tcpwang_luo_bian_cheng_zui_jia_shi_jian/</guid>
      <description>Reference https://tech.youzan.com/you-zan-tcpwang-luo-bian-cheng-zui-jia-shi-jian/?hmsr=toutiao.io&amp;amp;utm_campaign=toutiao.io&amp;amp;utm_medium=toutiao.io&amp;amp;utm_source=toutiao.io</description>
    </item>
    
    <item>
      <title>Inheritance in solidity</title>
      <link>http://localhost:1313/post/inheritance_in_solidity/</link>
      <pubDate>Tue, 15 Jun 2021 00:00:44 +0800</pubDate>
      
      <guid>http://localhost:1313/post/inheritance_in_solidity/</guid>
      <description>Reference 菱形继承问题: https://me.tryblockchain.org/blockchain-solidity-multi-inherit-and-call-chain.html</description>
    </item>
    
    <item>
      <title>Upgradable Contract</title>
      <link>http://localhost:1313/post/upgradable_contract/</link>
      <pubDate>Mon, 14 Jun 2021 14:47:44 +0800</pubDate>
      
      <guid>http://localhost:1313/post/upgradable_contract/</guid>
      <description>Resource 可升级合约: https://www.dtmao.cc/news_show_1340999.shtml 如何实现可升级合约: https://juejin.cn/post/6844903685776998407</description>
    </item>
    
    <item>
      <title>币安研究院：硬核解析智能合约常见漏洞原理及攻击模式</title>
      <link>http://localhost:1313/post/contract_bug/</link>
      <pubDate>Mon, 14 Jun 2021 00:00:44 +0800</pubDate>
      
      <guid>http://localhost:1313/post/contract_bug/</guid>
      <description>Resource 币安研究院：硬核解析智能合约常见漏洞原理及攻击模式: https://www.chainnews.com/articles/896074917877.htm</description>
    </item>
    
    <item>
      <title>brownie使用</title>
      <link>http://localhost:1313/post/brownie_use/</link>
      <pubDate>Sun, 06 Jun 2021 10:28:00 +0800</pubDate>
      
      <guid>http://localhost:1313/post/brownie_use/</guid>
      <description>Resource brownie使用: https://betterprogramming.pub/part-1-brownie-smart-contracts-framework-for-ethereum-basics-5efc80205413#:~:text=Brownie%20is%20a%20robust%2C%20easy,to%20initialize%20or%20integrate%20them.</description>
    </item>
    
    <item>
      <title>btc地址生成</title>
      <link>http://localhost:1313/post/btc_address/</link>
      <pubDate>Sun, 06 Jun 2021 10:28:00 +0800</pubDate>
      
      <guid>http://localhost:1313/post/btc_address/</guid>
      <description>btc地址生成 1 2 3 4 5 6 7 8 9 Get you public key Perform Sha256 on your Public key Perform RIPEMD160 hashing on the result of Sha256 hash Add version byte in front of RIPEMD160 hash (0x00 for main net, 0x6f for testnet) Perform Sha256 hash on the extended RIPEMD160 hash Perform Sha256 hash on the result of the previous step Take the</description>
    </item>
    
    <item>
      <title>alloc in golang</title>
      <link>http://localhost:1313/post/alloc_in_golang/</link>
      <pubDate>Sat, 05 Jun 2021 00:00:44 +0800</pubDate>
      
      <guid>http://localhost:1313/post/alloc_in_golang/</guid>
      <description>Resource Go内存管理: https://mp.weixin.qq.com/s/PNRhtdS_gZVTtrkkRmx7yA Go内存管理和分配: https://mp.weixin.qq.com/s/6jAVPSnw5UPotCg40CAB8Q</description>
    </item>
    
    <item>
      <title>escape in golang</title>
      <link>http://localhost:1313/post/escape_in_golang/</link>
      <pubDate>Sat, 05 Jun 2021 00:00:44 +0800</pubDate>
      
      <guid>http://localhost:1313/post/escape_in_golang/</guid>
      <description>Resource 通过Golang内存逃逸分析讨论GC的压力: https://www.jianshu.com/p/10e83dc6cd64?hmsr=toutiao.io&amp;amp;utm_medium=toutiao.io&amp;amp;utm_source=toutiao.io</description>
    </item>
    
    <item>
      <title>System Call</title>
      <link>http://localhost:1313/post/system_call/</link>
      <pubDate>Sat, 29 May 2021 00:00:44 +0800</pubDate>
      
      <guid>http://localhost:1313/post/system_call/</guid>
      <description>Resource 系统调用原理和实现: https://blog.csdn.net/gatieme/article/details/50779184 用户态模式和内核态模式区分: https://blog.csdn.net/github_37382319/article/details/111833529 增加系统调用的方法: https://www.cnblogs.com/yongheng20/p/4947702.html vdso技术: https://lishiwen4.github.io/linux/vdso-and-syscall</description>
    </item>
    
    <item>
      <title>microservice</title>
      <link>http://localhost:1313/post/microservice_gateway/</link>
      <pubDate>Thu, 06 May 2021 00:00:44 +0800</pubDate>
      
      <guid>http://localhost:1313/post/microservice_gateway/</guid>
      <description>Resources  https://mp.weixin.qq.com/s/So_HYu90vGcvE4qU5D9m4g  </description>
    </item>
    
    <item>
      <title>MySQL</title>
      <link>http://localhost:1313/post/mysql/</link>
      <pubDate>Thu, 06 May 2021 00:00:44 +0800</pubDate>
      
      <guid>http://localhost:1313/post/mysql/</guid>
      <description>数据库架构 https://zhuanlan.zhihu.com/p/43736857#:~:text=MySQL%E6%98%AF%E4%B8%80%E4%B8%AA%E5%85%B8%E5%9E%8B%E7%9A%84,Client%E8%B4%9F%E8%B4%A3%E8%BF%9E%E6%8E%A5%E5%88%B0Server%E3%80%82 https://mp.weixin.qq.com/s/zL4QP15W1Zd7HUm_wTbE2Q InnoDB架构 innodb架构: https://xie.infoq.cn/article/48544a3041634ca9ce62eaff4 缓冲池(buffer pool),这次彻底懂了: https://juejin.cn/post/6844903874172551181 自适应哈希: https://www.cnblogs.com/geaozhang/p/7252389.html 写缓冲(change buff</description>
    </item>
    
    <item>
      <title>system design</title>
      <link>http://localhost:1313/post/system_design/</link>
      <pubDate>Thu, 06 May 2021 00:00:44 +0800</pubDate>
      
      <guid>http://localhost:1313/post/system_design/</guid>
      <description>系统设计开篇 &amp;lt;System Design Interview: An Insider&amp;rsquo;s Guide&amp;gt; Resources 亿级数据库秒级扩容: https://blog.csdn.net/z50L2O08e2u4afToR9A/article/details/89839471 互联网架构高可用: https://mp.weixin.qq.com/s?__biz=MjM5ODYxMDA5OQ==&amp;amp;mid=2651962050&amp;amp;idx=1&amp;amp;sn=f60b8bb833fe3425f5227da42e3b3adf&amp;amp;chksm=bd2d0f1e8a5a8608f81d42a16eea476d0bd4763f84f9a008ed616d1cfa050a4015780f898eb1&amp;amp;scene=21#wechat_redirect 业务层，到底需不需要服务化: https://mp.weixin.qq.com/s/81Phkxg13ligFEWPTwpsfg 无锁缓存，每秒10万并发: https://mp.weixin.qq.com/s/BfuRWaB7RDjpGmQbZdmMZw 第三方服务挂了</description>
    </item>
    
    <item>
      <title>write an rpc from scratch</title>
      <link>http://localhost:1313/post/write_an_rpc_from_scratch/</link>
      <pubDate>Fri, 30 Apr 2021 01:01:00 +0800</pubDate>
      
      <guid>http://localhost:1313/post/write_an_rpc_from_scratch/</guid>
      <description>Reference  write an rpc from scratch: https://alexanderell.is/posts/rpc-from-scratch/  </description>
    </item>
    
    <item>
      <title>golang中的context</title>
      <link>http://localhost:1313/post/context_in_golang/</link>
      <pubDate>Tue, 27 Apr 2021 00:00:44 +0800</pubDate>
      
      <guid>http://localhost:1313/post/context_in_golang/</guid>
      <description>Reference: goroutine如何退出: https://geektutu.com/post/hpg-exit-goroutine.html context包解析: https://mp.weixin.qq.com/s?__biz=MzUxMDI4MDc1NA==&amp;amp;mid=2247486310&amp;amp;idx=1&amp;amp;sn=e1d998f35293e1bf259bf51f2f7ef6bd&amp;amp;scene=21#wechat_redirect</description>
    </item>
    
    <item>
      <title>分布式锁</title>
      <link>http://localhost:1313/post/distributed_lock/</link>
      <pubDate>Mon, 19 Apr 2021 01:47:44 +0800</pubDate>
      
      <guid>http://localhost:1313/post/distributed_lock/</guid>
      <description>实现 分布式锁redis锁和zookeeper锁: https://mp.weixin.qq.com/s/lrSQBK-Kihkj6994kQFpUQ 未分类 企业级高可用分布式锁原理剖析及设计实践 分布式锁应用场景 掌握分布式锁设计核心要点 能够根</description>
    </item>
    
    <item>
      <title>Redis</title>
      <link>http://localhost:1313/post/redis/</link>
      <pubDate>Thu, 15 Apr 2021 00:00:44 +0800</pubDate>
      
      <guid>http://localhost:1313/post/redis/</guid>
      <description>Redis架构 Redis系统架构中各个处理模块是干什么的?: https://learn.lianglianglee.com/%E4%B8%93%E6%A0%8F/300%E5%88%86%E9%92%9F%E5%90%83%E9%80%8F%E5%88%86%E5%B8%83%E5%BC%8F%E7%BC%93%E5%AD%98-%E5%AE%8C/19%20Redis%E7%B3%BB%E7%BB%9F%E6%9E%B6%E6%9E%84%E4%B8%AD%E5%90%84%E4%B8%AA%E5%A4%84%E7%90%86%E6%A8%A1%E5%9D%97%E6%98%AF%E5%B9%B2%E4%BB%80%E4%B9%88%E7%9A%84%EF%BC%9F.md Redis命令 redis命令目录: http://doc.redisfans.com/ 数据结构和对象 动态字符串 常数复杂度获取字符</description>
    </item>
    
    <item>
      <title>golang中的defer</title>
      <link>http://localhost:1313/post/defer_in_golang/</link>
      <pubDate>Fri, 02 Apr 2021 01:01:00 +0800</pubDate>
      
      <guid>http://localhost:1313/post/defer_in_golang/</guid>
      <description>Reference defer分析: https://studygolang.com/articles/742 defer实现原理: https://segmentfault.com/a/1190000020614493 defer优化: https://zhuanlan.zhihu.com/p/401339057 deferreturn函数: https://www.modb.pro/db/88823</description>
    </item>
    
    <item>
      <title>golang中的error</title>
      <link>http://localhost:1313/post/error_in_goalng/</link>
      <pubDate>Fri, 02 Apr 2021 01:01:00 +0800</pubDate>
      
      <guid>http://localhost:1313/post/error_in_goalng/</guid>
      <description>Reference wrapp error解析: https://studygolang.com/articles/23346?fr=sidebar</description>
    </item>
    
    <item>
      <title>golang中的select</title>
      <link>http://localhost:1313/post/select_in_golang/</link>
      <pubDate>Fri, 02 Apr 2021 00:00:44 +0800</pubDate>
      
      <guid>http://localhost:1313/post/select_in_golang/</guid>
      <description>Reference: select关键字: https://draveness.me/golang/docs/part2-foundation/ch05-keyword/golang-select/</description>
    </item>
    
    <item>
      <title>golang哈希表</title>
      <link>http://localhost:1313/post/hashmap_in_golang/</link>
      <pubDate>Wed, 31 Mar 2021 01:01:00 +0800</pubDate>
      
      <guid>http://localhost:1313/post/hashmap_in_golang/</guid>
      <description>Reference 理解Golang哈希表的原理： https://juejin.cn/post/6844903793927143438 golang哈希表： https://draveness.me/golang/docs/part2-foundation/ch03-datastructure/golang-hashmap/ golang的for-range(哈希表的遍历): https://draveness.me/golang/docs/part2-foundation/ch05-keyword/golang-for-range/</description>
    </item>
    
    <item>
      <title>sort algorithm</title>
      <link>http://localhost:1313/post/sort_algorithm/</link>
      <pubDate>Mon, 22 Mar 2021 00:00:44 +0800</pubDate>
      
      <guid>http://localhost:1313/post/sort_algorithm/</guid>
      <description>排序算法复杂度 冒泡排序 将第一个数A跟第二个数B相比较，如果A&amp;gt;B，那么交换A，B位置，接下来将第二个数跟第三个数比较 1 2 3 4 5 6 7 8 9</description>
    </item>
    
    <item>
      <title>二分查找</title>
      <link>http://localhost:1313/post/binary_search/</link>
      <pubDate>Fri, 19 Mar 2021 00:00:44 +0800</pubDate>
      
      <guid>http://localhost:1313/post/binary_search/</guid>
      <description>二分查找 从一个从小到大的序列中找寻数goal, 采用二分查找。 思路：选择两个变量，分别赋值区间的首尾；选取区间的中间值与goal相比较，如果g</description>
    </item>
    
    <item>
      <title>Java线程池实现原理及其在美团业务中的实践</title>
      <link>http://localhost:1313/post/thread_pooling_practice_in_meituan/</link>
      <pubDate>Mon, 15 Mar 2021 14:47:44 +0800</pubDate>
      
      <guid>http://localhost:1313/post/thread_pooling_practice_in_meituan/</guid>
      <description>Java线程池实现原理及其在美团业务中的实践 Portal: https://tech.meituan.com/2020/04/02/java-pooling-pratice-in-meituan.html</description>
    </item>
    
    <item>
      <title>为什么TCP协议有粘包问题</title>
      <link>http://localhost:1313/post/why_the_design_tcp_message_frame-%E5%89%AF%E6%9C%AC/</link>
      <pubDate>Mon, 15 Mar 2021 14:47:44 +0800</pubDate>
      
      <guid>http://localhost:1313/post/why_the_design_tcp_message_frame-%E5%89%AF%E6%9C%AC/</guid>
      <description>为什么TCP协议有粘包问题 Portal: https://draveness.me/whys-the-design-tcp-message-frame/</description>
    </item>
    
    <item>
      <title>NAT 穿透</title>
      <link>http://localhost:1313/post/nat_in_tcp/</link>
      <pubDate>Thu, 11 Mar 2021 14:47:44 +0800</pubDate>
      
      <guid>http://localhost:1313/post/nat_in_tcp/</guid>
      <description>NAT穿透在TCP中的运用 Portal: https://www.baseclass.io/huffman-coding/</description>
    </item>
    
    <item>
      <title>Huffman-coding</title>
      <link>http://localhost:1313/post/huffman_coding/</link>
      <pubDate>Fri, 05 Mar 2021 15:45:44 +0800</pubDate>
      
      <guid>http://localhost:1313/post/huffman_coding/</guid>
      <description>Huffman-coding Portal: https://www.baseclass.io/huffman-coding/</description>
    </item>
    
    <item>
      <title>一道关于gorotine的死锁问题</title>
      <link>http://localhost:1313/post/deadlock_in_goroutine/</link>
      <pubDate>Mon, 18 Jan 2021 21:05:24 +0800</pubDate>
      
      <guid>http://localhost:1313/post/deadlock_in_goroutine/</guid>
      <description>一道关于goroutine死锁 1 2 3 4 5 6 7 8 9 10 11 12 13 package main import ( &amp;#34;fmt&amp;#34; &amp;#34;time&amp;#34; ) func main() { ch := make(chan int) go fmt.Println(&amp;lt;-ch) ch &amp;lt;- 5 time.Sleep(2 * time.Second) } 上述结果我选择输出5，分析如下。go关</description>
    </item>
    
    <item>
      <title>BTC devguide(3)</title>
      <link>http://localhost:1313/post/btc_devguide_3/</link>
      <pubDate>Wed, 30 Dec 2020 15:59:00 +0800</pubDate>
      
      <guid>http://localhost:1313/post/btc_devguide_3/</guid>
      <description>Operating Modes 比特币软件具有不同级别的安全性和权衡，以验证区块链 Introduction 当前，有两种主要的方法来验证区块链作为客户端：完整节点和SPV客户端。 由于不建议使用</description>
    </item>
    
    <item>
      <title>BTC devguide(2)</title>
      <link>http://localhost:1313/post/btc_devguide_2/</link>
      <pubDate>Wed, 30 Dec 2020 15:16:00 +0800</pubDate>
      
      <guid>http://localhost:1313/post/btc_devguide_2/</guid>
      <description>Transactions 交易让用户花了satoshis。 每笔交易都由几部分组成，既可以进行简单的直接付款，也可以进行复杂的交易。 Introduction 本节将描述每个部分并演示如何一起</description>
    </item>
    
    <item>
      <title>BTC devguide(1)</title>
      <link>http://localhost:1313/post/btc_devguide_1/</link>
      <pubDate>Tue, 29 Dec 2020 18:12:00 +0800</pubDate>
      
      <guid>http://localhost:1313/post/btc_devguide_1/</guid>
      <description>Block Chain 区块链系统提供了公共分类帐，有序且带有时间戳记的交易记录。 该系统用于防止重复支出和修改以前的交易记录。 Introduction 比特币网络中的每个完整节点都独立</description>
    </item>
    
    <item>
      <title>Base58Check 编码</title>
      <link>http://localhost:1313/post/base58check_encoding/</link>
      <pubDate>Tue, 29 Dec 2020 10:28:00 +0800</pubDate>
      
      <guid>http://localhost:1313/post/base58check_encoding/</guid>
      <description>本文章翻译自Base58Check encoding，如有侵权，请联系作者进行删除 Background Base58Check 是一种被用来编码比特币地址的协议 这原始比特币源码解释了为</description>
    </item>
    
    <item>
      <title>Cloud Storage</title>
      <link>http://localhost:1313/post/cloud_storage/</link>
      <pubDate>Sat, 19 Dec 2020 00:28:00 +0800</pubDate>
      
      <guid>http://localhost:1313/post/cloud_storage/</guid>
      <description>unkonw 云原生与微服务 云原生本质上是一套知道软件架构涉及的思想，建立在&amp;quot;未来的软件一定生长于云&amp;quot;的核心假设之上。 云原生包括容器</description>
    </item>
    
    <item>
      <title>Channel在Go中运用</title>
      <link>http://localhost:1313/post/the_usage_of_channel_in_go/</link>
      <pubDate>Thu, 10 Dec 2020 21:05:24 +0800</pubDate>
      
      <guid>http://localhost:1313/post/the_usage_of_channel_in_go/</guid>
      <description>basic usage of channel 使用channel发送接收 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 package main import &amp;#34;fmt&amp;#34; func main() { jobs := make(chan int, 5) done := make(chan bool) go func() { for { j, more</description>
    </item>
    
    <item>
      <title>Celery笔记</title>
      <link>http://localhost:1313/post/celerynote/</link>
      <pubDate>Thu, 26 Nov 2020 15:57:23 +0800</pubDate>
      
      <guid>http://localhost:1313/post/celerynote/</guid>
      <description>Getting Started celery is flexible. Almost every part of Celry can be extended or used on its own, Custom pool implementations, serializers, compression schemes, logging, schedulers, consumers, producers, broker transports, and much more. celery中current_app的指向 1 2 3 4 5 6 7 8 9 10 11 12 13 14 # main.py</description>
    </item>
    
    <item>
      <title>Linux线程</title>
      <link>http://localhost:1313/post/linux_thread/</link>
      <pubDate>Tue, 14 Jul 2020 23:45:44 +0800</pubDate>
      
      <guid>http://localhost:1313/post/linux_thread/</guid>
      <description>Linux线程 Linux线程的发展 1991年1月发布的Linux2.2内核中，进程是通过系统调用fork创建的，新的进程是原来进程的子进程。</description>
    </item>
    
    <item>
      <title>哈希算法和密钥保存</title>
      <link>http://localhost:1313/post/hashalgorithmandkeypreservation/</link>
      <pubDate>Sun, 12 Jul 2020 21:49:52 +0800</pubDate>
      
      <guid>http://localhost:1313/post/hashalgorithmandkeypreservation/</guid>
      <description>本文章翻译自Pradeep Loganathan，如有侵权，请联系作者进行删除 什么是哈希?哈希算法和密钥保存 哈希 哈希是一个单向函数，它将任意长</description>
    </item>
    
    <item>
      <title>核酸试剂的复合检测</title>
      <link>http://localhost:1313/post/compounddetectionofnucleicacidreagent/</link>
      <pubDate>Sun, 05 Jul 2020 23:46:52 +0800</pubDate>
      
      <guid>http://localhost:1313/post/compounddetectionofnucleicacidreagent/</guid>
      <description>问题: 100个人，其中一个人是患者；一个人使用一支酸剂测试，患者产生反应，否则不产生反应，至少用几只酸剂可以测试出患者是谁？ 答: 1支酸剂测试</description>
    </item>
    
    <item>
      <title>Build_hugo_site</title>
      <link>http://localhost:1313/post/build_hugo_site/</link>
      <pubDate>Sat, 04 Jul 2020 14:51:03 +0800</pubDate>
      
      <guid>http://localhost:1313/post/build_hugo_site/</guid>
      <description>搭建Hugo博客网站 1 测试语法 1 测试图片 API bbb 发布文章 hugo new post/xxxx.md 发布github hugo -t even Reference https://segmentfault.com/a/1190000012975914?utm_source=tag-newest https://juejin.im/post/5e9cf8bd51882538083fec4c#heading-1 https://www.jianshu.com/p/475110a1c811 同even博客: https://edward852.github.io/ hugo添加Algolia搜索支持</description>
    </item>
    
    <item>
      <title></title>
      <link>http://localhost:1313/post/dns/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/post/dns/</guid>
      <description>Resource 为什么DNS协议使用UDP？只使用了UDP吗？: https://cloud.tencent.com/developer/article/1818152</description>
    </item>
    
    <item>
      <title></title>
      <link>http://localhost:1313/post/tcp_kernel_optimize_option/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/post/tcp_kernel_optimize_option/</guid>
      <description>请求url</description>
    </item>
    
  </channel>
</rss>